apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    splits{
        abi {
            universalApk true
        }
    }
    signingConfigs {
        debug {
            storeFile file('C:\\Users\\hp\\Desktop\\Android\\app_keys.jks')
            storePassword '197346285'
            keyAlias 'key0'
            keyPassword '197346285'
        }
        release {
            storeFile file('C:\\Users\\hp\\Desktop\\Android\\app_keys.jks')
            storePassword '197346285'
            keyAlias 'key0'
            keyPassword '197346285'
        }
    }
    compileSdkVersion 31
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.oicen.queueapp"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        renderscriptTargetApi 21
        renderscriptSupportModeEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
    }

    buildTypes {
        def ipList = getLocalIPv4();
        debug {
//            buildConfigField "String", "HOST", ipList.empty ? '""' : '"http://' + ipList.get(1) + '/API/"'
//            buildConfigField "String", "HOST", '"https://kumpares-management.ml/API/"'
            buildConfigField "String", "HOST", '"https://kumpares-management.herokuapp.com/API/"'
        }
        release {
//            buildConfigField "String", "HOST", ipList.empty ? '""' : '"http://' + ipList.get(1) + '/API/"'
//            buildConfigField "String", "HOST", '"https://kumpares-management.ml/API/"'
            buildConfigField "String", "HOST", '"https://kumpares-management.herokuapp.com/API/"'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        // Exclude file to avoid
        // Error: Duplicate files during packaging of APK
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/*.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.github.bumptech.glide:annotations:4.12.0'
    implementation "com.github.bumptech.glide:okhttp3-integration:4.12.0"
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.qhutch.elevationimageview:elevationimageview:2.4'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation 'com.jsibbold:zoomage:1.3.1'

}
repositories {
    mavenCentral()
}

static def getLocalIPv4() {
    def ip4s = []
    NetworkInterface.getNetworkInterfaces()
        .findAll { it.isUp() && !it.isLoopback() && !it.isVirtual() }
        .each {
            it.getInetAddresses()
                .findAll { !it.isLoopbackAddress() && it instanceof Inet4Address }
                .each { ip4s << it.getHostAddress() }
        }
    return ip4s
}